import json
import logging

import streamlit as st
from cryptography.fernet import Fernet

ENCRYPTED_CREDENTIALS_NAME = "ENCRYPTED_CREDENTIALS"
ENCRYPTED_CREDENTIALS = b'gAAAAABiHrlwt4bK-viZu1Gjzr0hCE1tHMq2PGWUzguZ5wqgTW1haqENbPVGqbq3BtDRrBL9YdnN8JXabNwYpR3Jkd6fF5j0xo8a4wQYemYIse8CpTxy950R3XyKN7oZeNzPjEWeYyI0RqinireXUrBuxaABSMY7rnkLppt2wJ7FmfG2aUQExraSaaOLU6-VJVL4Q5oDz8MIusZShw1WadYnaZeAQ9mJ3Lsi1FDYllCaCfTJDRjxuIZh9xz0Y8qKQlgrTzCtegMlB4fD_qhTpAAfHygsGktlxX8-7XgsN21YrrOwvBj2-GSaj7PFan2RcbkiFbScAO7vNUJ-Aa-BRpif3A2zZ0BciTKfI72agAzeq7lP4uMhTTSnhBgixBd-wzqXHH7L-jBC-dLAzp_vOgYh0u1kaIDOWYAcQBSDgEsDuT8XXCX2p4QWHIf3HoXh-BXI-eqEHlmulrtdvI9b0bRsiFeTLvcrMqWUpafZG29vp4EV6ufiE00D7SHy68rl3Kwd_WsgPvvSpDhqxlGP_LPnXDF7yQ0DfIvb0R9RWqDFruspFDrUGKp4cM8VkRCxyvieivbEUV3da2OeDkRixRFfeBMbar9WGPSdjBmjwvA99W8bNLrB1JqbftpyyBJgEP3dHYD8lkLjMLj6RaihEeZD6iJKuLxhYhXWDKfboswp56UZnxlaqYLP43GcFSXFOcnIEcbmlCPqSAIBlmLC_Y8XfjCK8Uqt8qxVQMb9VusB4E90l5X5V4ezovsKFxMqAX8MD_VU6rEHLDmK0atPlewXpBmZ3j9aKaj6Yme5FMuVegcDMriu8abPfD0NJ5Sgw46PY5hadNeJ_0gZMJnS8pGrBEl-2Mh9Dqx_arZCC3RjuaJMX05WOKbXh3SR5X2zEs0gi8u3Ot0b8DE5aM_8R-9HFYU-iQZsY7pHbW738O91QgQEYATVQ_4nuEf7rQwR4C7dhIpSGlDnerpyDYgS4xbgTKdwAXqbiy7qnkOytpk-JZH44C_HymvvxugWYIx3ckKdoXWRULQUEnYCizDEQAnijO4phQHPdSGPkV4CJCMRxIkLSihxyBbCTALZAqaMdlQNgPp_aktHE61ApzIsfF7t1X-Cowc7sCth8j9NlWJs8hMVfE4u215T9afyZo05mEqgnh19DehvFytOUI8pWoPN5r5zXp00KfpP0rtqG0WnCVQ04VbmxD2K8qiQeb7_VqEszItQfjv8lZGwOJfZHeIPhXxJhzv9m5q4Yt7D5zKPGOuRtfbDb8Fa84z0tWMBv2yagj9IJ6V3PylucW4SC3wmUIvpJ9zgOLOPuUHw0D0brx9OkHSijITLeCcx2iYKWSp94eCatNWBsD4eMA-QRLI0iSFOL_ITnqLIgjA06lcpaMo8byXpWH_0i6n8XO_blxyR6f-f6yPjvRfs7j0Zym6DLgSiOpwWlaI7By7jP6077m8EKlihrWWI8dJ9GAMKaGA_VBgYRl43V5M38nci_caG8WInRVxosgriYtvp0C9NutyQr9Q48k2LRIYsgH49Q77atMB4OWLzksGXubHy4MQIpMWXMq6KV7kKyOPyxr4O53ps9DT7GRjooXo7sbDfsBYsTrgqL7eSZkKOxp1GCg7OUnRJGrG_AIk80QHX4MWaM-VtNjFEmZ9wOjxj62LkFJE__6qF8YmKcrJeKrqDuapLFXrL3P69QHB3m3E9Y-dm8P1kharx2xCuJDbEi9eVZedMtjsJOIHFb_lXBOQuOOlTrzt78uJ8Us-VVTs9Uuaq9r2pjsKc6inIabxf6qiViM-r5BLRTTLg_F8lLvwpSB8CCG2xiA_HuaSXzLUqPXzfrvcx4zZV0sz4AI-w7Wv-nm0SF9TfTJYMlF_icfT1wi9qs7ZGgQ2lesW2GKglfUzLrijB8W_biVBwgHay5tqk3m9rdpg7c8R1RjL_EHcbYwg6gwrarsxe8xB57mfE4-r8gI9OSr7D4bT2Ih7RrT7oVGHOEHoU3jC2ZFlrCxpGEReUxIZ65lZpNys2j0w36qsWl1w7nrSyoQUx2ei3EtiYwFdfjeYmmXRWXBN6Y8e1ap1FQF7fvvsOsrLWcOVUfHIfFp_qyUJ4ZohHsNYWdfPCuW8lP5K5mYPOxPavMm7TAadlyAlG7uG0IyfCT3uCq_5FyYzYJ6_7buSbDWmwYE5jfEXAnAdvpf8pFHaq6nYu0wNwLAaF1kK5uqo1gB6ElkOtyjfcu04-PzwYPYpnc_VFGFjKGQq0oDNS9qKFWQMAo_KbFibBh6JNFGpppA2qN3ygUJkwWFXffiuDDf-G6i6zKPVnY_wcv21_XYebeqiHBdATeWvVJVC_kZHv6fuJAZlVluhNsVfQP9MD6kEfvqaIiBC6z8qVO7SY8W-fd3ThsB_MQnybukB-hldfaJyxlwUCo6sLF4XQy5yDIhMRygszooAItusIXrko2f3UMqVHJ5C3mnZOJ8HhYvUGVjUbbATy1j1Y52Q4iRfjrIPuojz-FTDLoA9vqLVaWfFaAaoef5Szixm781-TwQ6y_5TCEvEhLnP03BxM_IOOZ0U7HFt-E0YasTn_RaLT-U9wBnLA3Rtf1FNdN8onUmBEpebH9IFit7V9nOJbvm4Y7Bn8Y76hjDh4ITB7_x8xUXeQq2_FXDOz7w5n7J7MrGgyRcYY_IhiE44IIorisNIvhXHqAj_FiiEeROurNJ7m-ep3hR2ne4gP8Gpi_ZvTgH4gnS-0fNWYwvb7kUq5DN5MLkyhR2FsQ3ChBS0yEj5h_1hLLkx2q4TOTiANz-67J8LkfMK0jMU9FvQgaHUGN48TipEaPNUmr6MDn3KPKETgTb1fNoPdNwWgRDCge1UgZ2G3DUVX7eau0TX92CtLyu--ODuiGGsB3drs_HRw4b39kiDfuNGYC9NiH0SAdG8vhSODBOd-Z2Q0HWFwClMSdKqzqXyVehZ9k5VqSqK77wyXALk4DlaC8uZnrNxmRIUzuf_eCmO6VhcTzbe0I6i18vyqRK1A6w1_0ECJokW-JTj5DYXkhBPTlSinj31asqljIjKaNoi3pRv28YVXX5IospWFCKcrcW2az1Vx-zhdDguSvESSyY1TcBkia4EhijgyXtTF49RwozIUhPayiQ0AsW5HMdEsQbp7sDgQAYfKUfBG'

# Credentials are obtained from this tutorial: https://docs.gspread.org/en/latest/oauth2.html
# They look like this:
# credentials = {
#     "type": "service_account",
#     "project_id": "api-project-XXX",
#     "private_key_id": "2cd … ba4",
#     "private_key": "-----BEGIN PRIVATE KEY-----\nNrDyLw … jINQh/9\n-----END PRIVATE KEY-----\n",
#     "client_email": "473000000000-yoursisdifferent@developer.gserviceaccount.com",
#     "client_id": "473 … hd.apps.googleusercontent.com",
# }
def get_credentials(key: str) -> dict[str, str]:
    if ENCRYPTED_CREDENTIALS_NAME in st.secrets:
        logging.warning(f'Getting credentials from secrets')
        raw_credentials = str.encode(st.secrets[ENCRYPTED_CREDENTIALS_NAME])
    else:
        logging.warning(f'Getting credentials from code')
        raw_credentials = ENCRYPTED_CREDENTIALS

    f = Fernet(key)

    decrypted: bytes = f.decrypt(raw_credentials)

    return json.loads(s=bytes.decode(decrypted))