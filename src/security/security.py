import json
import logging

import streamlit as st
from cryptography.fernet import Fernet

ENCRYPTED_CREDENTIALS_NAME = "ENCRYPTED_CREDENTIALS"
ENCRYPTED_CREDENTIALS = b'gAAAAABjGqfHRBbLQ9py_oM65cEO9CoM7R6cf7ebOaAOPd1UScXS2AlSmUn3yjzICV3qHRlYhszgLVQC2yIhyUBZxoxnhE4HSOnaWNP2-YwieFtU2kO4I3rV8_HMMptZgvQ1YEwMJxfaQFgHjqz31lVBwjLCiNGaPhg0o-C9kik3asVVKaOVNVLZGkj9PI90cs_zo83J4VSVFgAYLARkOIgXk9l1OXUFB3w5W7txG0UQzuNRJ48UrIdEqxBoVUIAEjAhbOpjDie3FMYztPRtxpNXkINGrg3wR3lkBQp8Ci5VNcbcfbB3zwh1kM8ZQGtiCL8TDdlMg8Yd8uz7IWKR83l5dMUOR2cZBKIVu0O45HtVEos-UHdlZBbBkHGkkgghegot2AU3Mp7Z02lzSa4eUUhlEBpfda3R-KFmuI43C2eNRD7YrR2e5mdnP4TxUoh6IAp0qQUgqOGhp534yNX4251AKtuJkG3i8a4AHCl9RiTBqq3M0JNlyDsgSqKOFuhechg0pgVC3MJmbR5WmEpRM00uvPNbHDWkd_I7buUqQXoi76CJjjn5hR86z_k8B4fyruj7ZjS_2E3RjsYjPb4su_PGUkbX_qCo5cCXUNaypenfdB5JLGsGCdNX34JSJXQWiSvAUzweeklSSyC3sJqBu19uKIERjWWmWR7tFGK-e1ijwf_UgLcxiQpL4WVqSs7qGEUidRZSvy6g_IHLGGjg32Yu3aVA3pKvUhwuklGTx1b-y8A6lmJou-PxIV1GfqWP_Ci9fCBz4Dpni6UEDD_uGQhXWFXoM8t-SlXVb9mJ6ET9C21Ot2ri9rWiEO64KmUN6Zl_MSiku5qYjO6ltXyVRSOJlq7ufMiyY3yvIMR44juNmR2DGsBLstR-8wURppnFBKlOH3uRKvjM3R15pGncV_g-5m9dX2L5N0lRgZ7TqPSmwKdGXkHHTPDc-t647BDcmGCgXtZ-IqXET9Ju-XFwm91daK8UYVShVBN4U8-hFfjtDm8JHCMkYq89_RxsO7GbQYaS_JPTvLOBEukvkvDAOoWHAMH0AyQaGJqSn-2b8jjFOaQ2nxuVOaOVeYJ_lmiLXM41GGy61Ze2rtF3UWOGAj-L2OiqFfN1k2o_l_12ZjVgJlvYqE51fYuKg5nU_DNPkMD0TyXHXjN9Bl29aFKy-ovyw8j2S_Rdsjn5p2WHPH144CpBedumjoguyY_Fs4Xz8A2BZij9JhpuFrDKr-vGdWFhv2n-IBhHBatkwfYZia0OIG0oNZNiMPRnMjfNM6k4_xKxYsy5FlHbOAjM6qud7eD2CCjRapVFLzW9kmmlCz2GJP0EmLqrYmuZK0o2Ni-yWeMyuCTvjezRIzchGmpbrfTgAZYweD-Awq6bNxCMjQWbCIJieXdBS0jI2gE22EM_IzGbbz_Zq0Ul4qA2BllPvqZDbstwFkTf1OD9kpYe06iH_COQUrN1mviti3ACm_kATeOixesqKS12njuc59cbb4hPzGmszvoNJXyN0oIMANshQvJCpIiouBNPkMeSW6evICeTJKxsY8uz3whFVA1t_qbakhEPt_beme3_O4_lL7hw4tV5q600_xM8_g6y482X3smPFRQAmKWgpAVhnkW8l5kK-7R3kZb-NfwNQsaeDNvi9wDMx1ovR9tLZkC4vVZsAKhuGVLpVoXhKJABSDxpxU0c2CYyERhuSu9HTpB0moUCQjcMpjZPOv4ZYRqmVhyO2oxKMb5fZ2pJt_I7aJz8DqIdQ0LguyUI4qtEVgrYr4xQ2rwbzGdjtyI3xM_KINOp-E1LtMvP7ac94wt3FdWlPeO-vC_rd6AJij1lF2zF1sW0NumRegWY_0bmh8HGrWY0DTnQhyZxzAUXnDPpSoruOQqB6b1pVeU5FwJYQGONktwOuo29sjm9q-osiUTfAhQfxUJxFJVKASWJmI5z9BhU1EZrklfHfbIQXo8B1MWDFYCvOWYO_SYCVRfMHTRr89W7L6Np40kljkFQaeZatmiqhIaSqLJxreTORXLY5XHN4m8QO7aB1G2DYo9WuK96h84Cnj6_cPV6DiZyFJfv6lk2EBD73OzVWb1_wtOcRl6pc8oD8yg7hdJxSdy4bAIA-LQgxBfoBzVeZvUitkN8P6hYkkBM8fPXW3hV4eUln4U9Mfe4gIlqlttUsjzfh3LUmMUH_lLCubrkLrQ0ritZSZh4LMACy3xEtoyCD3oDaKy9V6nKeEKS0whlYKPXiyMA-rxgDQELUy_cOU2ClXFSFORIGz5PFjhc0593vlDR7L4qkgeC_AAxYU1BAg7gN-RY-S0iO6ySZtTaeE_lfZRjM-ORKbwaOjh4s1RSh9I0xJpkgi-U0wl1-KWm_CQDfRLe773iC7M5TuXCcURb89BNv6SL6nqT5zAhke5nO_-seniDFsyId-_6tvYdMcNZciSLoup-d5QlV5a8GMAsBkapbYrHo51EHbEU0yE-f5f5_Pe-Er3ahXNYPX_xFLy88h12X9p-Mm6S8-pSCqvr7seScUFmFoMaTNMrfLgK20Ld49CNZl0Izs1xFmqkC5SvyV_bz4IQyBhOXWAhJMZB_fywU1EAcyaLSIV0Iymc0CKY0o4FzpcbPJvIJuUv1yyMvb4PSSc4r4RoP7WmfwlEDkuMcazWeLQXhF7uJ4t92SH0rR-SB1eJco8wcVk6K8w7POMHsub4sEZlIvHra2qUAnJIsXSAJ0KYI4W73R8dGIHXeWqrwz_OOyERcBzTpo79owYVZtXwgCHdWC_rWY4vNow-vpcgH1AOXVJne2ncScsOcni0h-Mg2WwYG7-kNiFoxVKzaUFOr4IRzfHtnJNVj-HHEj4GWe_Mh2y8BdxSxah5MK3EzgPNUIEhWawq-duE99MWiaknkQFSxENIOhDqeLIPJ4XQzrRnYCucvG3lQhezmmhGt71Jvky7YYgHLxupA1pnhKpBkCfLlPMuvzApnfmo2QCDelBRVibAhzmGq1oMM_Rj6ISrAgQNWyxyhNaf-iywpw9SC4XeCV2Gqwp_M_EtR785-5f2BVhk63MzNDQxrkOmvfDjGfGPB1ZaShkx_gBfIbPgAXowuayGbQi3Wy43jo9eBgBnTzY4UyEtKJ0BbpX1BNDWRgxO0T4SO62I39XP_F5sUOWVVIaBvbMf'

# Credentials are obtained from this tutorial: https://docs.gspread.org/en/latest/oauth2.html
# They look like this:
# credentials = {
#     "type": "service_account",
#     "project_id": "api-project-XXX",
#     "private_key_id": "2cd … ba4",
#     "private_key": "-----BEGIN PRIVATE KEY-----\nNrDyLw … jINQh/9\n-----END PRIVATE KEY-----\n",
#     "client_email": "473000000000-yoursisdifferent@developer.gserviceaccount.com",
#     "client_id": "473 … hd.apps.googleusercontent.com",
# }
def get_credentials(key: str) -> dict[str, str]:
    if ENCRYPTED_CREDENTIALS_NAME in st.secrets:
        logging.warning(f'Getting credentials from secrets')
        raw_credentials = str.encode(st.secrets[ENCRYPTED_CREDENTIALS_NAME])
    else:
        logging.warning(f'Getting credentials from code')
        raw_credentials = ENCRYPTED_CREDENTIALS

    f = Fernet(key)

    decrypted: bytes = f.decrypt(raw_credentials)

    return json.loads(s=bytes.decode(decrypted))